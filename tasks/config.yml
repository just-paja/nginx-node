---
- name: Check SSL certificate file
  become: true
  register: ssl_certificate_file
  stat:
    path: '{{ node_ssl_certificate_path }}'

- name: Configure nginx non-SSL config file
  become: true
  template:
    src: node-nginx.conf
    dest: '/etc/nginx/sites-available/{{ node_project_id }}.conf'
  when: not ssl_certificate_file.stat.exists
  notify:
    - restart nginx

- name: Configure nginx SSL config file
  become: true
  template:
    src: node-nginx-ssl.conf
    dest: '/etc/nginx/sites-available/{{ node_project_id }}.conf'
  when:
    - ssl_certificate_file.stat.exists
  notify:
    - restart nginx

- name: Enable nginx app
  become: true
  file:
    src: '/etc/nginx/sites-available/{{ node_project_id }}.conf'
    dest: '/etc/nginx/sites-enabled/{{ node_project_id }}.conf'
    state: link
  notify:
    - restart nginx

- name: Configure as system service
  become: true
  template:
    src: systemd.service
    dest: '{{ node_systemd_service_file }}'
  notify:
    - restart service

- name: Enable system service
  become: true
  systemd:
    name: '{{ node_project_id }}'
    enabled: true
  notify:
    - start service

- name: Configure Lets Encrypt
  become: true
  shell: 'certbot -n --nginx --agree-tos --domains {{ node_server_name.split(" ") | join(",") }}'
  register: certbot_result
  when: not ssl_certificate_file.stat.exists
  changed_when: '"Keeping" not in certbot_result.stdout'

- name: Configure nginx SSL config file
  become: true
  template:
    src: node-nginx-ssl.conf
    dest: '/etc/nginx/sites-available/{{ node_project_id }}.conf'
  when: not ssl_certificate_file.stat.exists
  notify:
    - restart nginx
